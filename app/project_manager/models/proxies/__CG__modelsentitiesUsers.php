<?php

namespace proxies\__CG__\models\entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Users extends \models\entities\Users implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'models\\entities\\Users' . "\0" . 'id', '' . "\0" . 'models\\entities\\Users' . "\0" . 'fname', '' . "\0" . 'models\\entities\\Users' . "\0" . 'lname', '' . "\0" . 'models\\entities\\Users' . "\0" . 'status', '' . "\0" . 'models\\entities\\Users' . "\0" . 'username', '' . "\0" . 'models\\entities\\Users' . "\0" . 'password', '' . "\0" . 'models\\entities\\Users' . "\0" . 'hash', '' . "\0" . 'models\\entities\\Users' . "\0" . 'isOwner', '' . "\0" . 'models\\entities\\Users' . "\0" . 'email', '' . "\0" . 'models\\entities\\Users' . "\0" . 'avatar', '' . "\0" . 'models\\entities\\Users' . "\0" . 'position', '' . "\0" . 'models\\entities\\Users' . "\0" . 'joined', '' . "\0" . 'models\\entities\\Users' . "\0" . 'language', '' . "\0" . 'models\\entities\\Users' . "\0" . 'user_groups_definition');
        }

        return array('__isInitialized__', '' . "\0" . 'models\\entities\\Users' . "\0" . 'id', '' . "\0" . 'models\\entities\\Users' . "\0" . 'fname', '' . "\0" . 'models\\entities\\Users' . "\0" . 'lname', '' . "\0" . 'models\\entities\\Users' . "\0" . 'status', '' . "\0" . 'models\\entities\\Users' . "\0" . 'username', '' . "\0" . 'models\\entities\\Users' . "\0" . 'password', '' . "\0" . 'models\\entities\\Users' . "\0" . 'hash', '' . "\0" . 'models\\entities\\Users' . "\0" . 'isOwner', '' . "\0" . 'models\\entities\\Users' . "\0" . 'email', '' . "\0" . 'models\\entities\\Users' . "\0" . 'avatar', '' . "\0" . 'models\\entities\\Users' . "\0" . 'position', '' . "\0" . 'models\\entities\\Users' . "\0" . 'joined', '' . "\0" . 'models\\entities\\Users' . "\0" . 'language', '' . "\0" . 'models\\entities\\Users' . "\0" . 'user_groups_definition');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Users $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getID', array());

        return parent::getID();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', array());

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function getfullName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getfullName', array());

        return parent::getfullName();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getHash()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHash', array());

        return parent::getHash();
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', array());

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsOwner', array());

        return parent::getIsOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserGroupDefinition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserGroupDefinition', array());

        return parent::getUserGroupDefinition();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatar', array());

        return parent::getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', array());

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function getJoined($format = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJoined', array($format));

        return parent::getJoined($format);
    }

    /**
     * {@inheritDoc}
     */
    public function getJoinedISO()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJoinedISO', array());

        return parent::getJoinedISO();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($val));

        return parent::setName($val);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', array($val));

        return parent::setLastName($val);
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($val));

        return parent::setUsername($val);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($val, $md5 = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($val, $md5));

        return parent::setPassword($val, $md5);
    }

    /**
     * {@inheritDoc}
     */
    public function setHash()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHash', array());

        return parent::setHash();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage(\models\entities\Core\Language $val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', array($val));

        return parent::setLanguage($val);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsOwner($bool = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsOwner', array($bool));

        return parent::setIsOwner($bool);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($val));

        return parent::setEmail($val);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsrGroupsDefinition(\models\entities\User\UserGroupDefinition $user_group_definition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsrGroupsDefinition', array($user_group_definition));

        return parent::setUsrGroupsDefinition($user_group_definition);
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatar($val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatar', array($val));

        return parent::setAvatar($val);
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', array($val));

        return parent::setPosition($val);
    }

}
